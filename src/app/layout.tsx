// Importa o tipo "Metadata" de "next" para tipar a informação de metadados da página (como título e descrição).
import type { Metadata } from 'next'

// Importa a função "localFont" do Next.js para carregar fontes locais.
import localFont from 'next/font/local'

// Importa o arquivo CSS global para aplicar estilos gerais à aplicação.
import './globals.css'

// Importa o componente "StyledComponentsRegistry", que gerencia a inserção de estilos do Styled Components no lado do servidor.
import StyledComponentsRegistry from '../lib/registry'

// Importa o componente "Providers", que envolve a aplicação com provedores como o de contexto e estilos globais.
import { Providers } from './providers'

// Cria uma instância da fonte local "geistSans", especificando o arquivo de fonte, a variável CSS e o intervalo de peso.
const geistSans = localFont({
  src: './fonts/GeistVF.woff', // Caminho do arquivo de fonte.
  variable: '--font-geist-sans', // Nome da variável CSS associada à fonte.
  weight: '100 900' // Intervalo de pesos da fonte.
})

// Cria uma instância da fonte local "geistMono" com configurações semelhantes à "geistSans".
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff', // Caminho do arquivo de fonte.
  variable: '--font-geist-mono', // Nome da variável CSS associada à fonte.
  weight: '100 900' // Intervalo de pesos da fonte.
})

// Definindo os metadados da página (título e descrição), que são usados por Next.js para gerar as tags <head> para SEO.
export const metadata: Metadata = {
  title: 'Create Next App', // Título da página, usado no <title> do HTML.
  description: 'Generated by create next app' // Descrição da página, usada na tag <meta> para SEO.
}

// Componente principal "RootLayout" que serve como layout para a aplicação.
// Recebe "children" como propriedade, que é o conteúdo da aplicação que será renderizado dentro do layout.
export default function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode // Tipagem do "children", que é qualquer conteúdo JSX passado para o componente.
}>) {
  return (
    // Definindo a estrutura HTML básica da página. O "lang" define o idioma da página.
    <html lang="en">
      <body
        // Aplica as fontes locais e define a propriedade antialiased para um texto mais nítido.
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* O StyledComponentsRegistry gerencia a inserção de estilos no lado do servidor, especialmente útil em SSR (Server-Side Rendering). */}
        <StyledComponentsRegistry>
          {/* O Providers envolve toda a aplicação com contextos e provedores, aplicando também os estilos globais. */}
          <Providers>{children}</Providers>
        </StyledComponentsRegistry>
      </body>
    </html>
  )
}
